@page "/movies"
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]
@using CinemaApplication.Client.Services;
@using CinemaApplication.Shared;
@inject IMovieService MovieService;
@inject IDirectorService DirectorService;
@inject NavigationManager NavigationManager

@if (Movies == null)
{
    <p>Loading...</p>
}
else
{
    <h3>Movie List</h3>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Title</th>
                <th>Category</th>
                <th>Publication Year</th>
                <th>Director</th>
                <th><a href="movies/add" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Add Movie</a></th>
            </tr>
        </thead>
        @foreach (Movie movie in Movies)
        {
            <tr>
                <td>@movie.Title</td>
                <td>@movie.Category</td>
                <td>@movie.PublicationYear</td>
                <td>@movie.DirectorName</td>
                <td>
                    <a href="movies/edit/@movie.MovieId" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Edit</a>
                    <button @onclick="() => HandleDeleteAsync(movie.MovieId)" class="btn btn-danger btn-lg active" role="button" aria-pressed="true">Delete</button>
                </td>
            </tr>
        }
    </table>
}

@code {
    private IEnumerable<Movie>? Movies { get; set; }

    private async Task HandleDeleteAsync(int id)
    {
        await MovieService.DeleteMovieAsync(id);
        NavigationManager.NavigateTo("/movies", true);
    }

    protected async override Task OnInitializedAsync()
    {
        Movies = await MovieService.GetAllMovieAsync();

        IEnumerable<Director> directors = await DirectorService.GetAllDirectorAsync();
        Dictionary<int, string>? directorMap = directors.ToDictionary(x => x.DirectorId, x => x.Name);
        foreach (Movie movie in Movies)
        {
            movie.DirectorName = directorMap.TryGetValue(movie.DirectorId, out string name) ? name : "";
        }
    }
}
